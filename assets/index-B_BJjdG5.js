import{initializeApp as E}from"https://www.gstatic.com/firebasejs/10.12.4/firebase-app.js";import{getFirestore as b,getDoc as S,setDoc as I,doc as v}from"https://www.gstatic.com/firebasejs/10.12.4/firebase-firestore.js";import{getAuth as L,GoogleAuthProvider as x,signOut as $,onAuthStateChanged as k,signInWithPopup as M}from"https://www.gstatic.com/firebasejs/10.12.4/firebase-auth.js";import{GoogleGenAI as f,Type as c}from"https://esm.run/@google/genai";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function s(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(i){if(i.ep)return;i.ep=!0;const a=s(i);fetch(i.href,a)}})();const T={apiKey:void 0,authDomain:void 0,projectId:void 0,storageBucket:void 0,messagingSenderId:void 0,appId:void 0,measurementId:void 0},B=E(T),w=b(B),C=L(B);try{const t=new x;window.firebaseServices={auth:C,provider:t,firestore:w,signInWithPopup:M,onAuthStateChanged:k,signOut:$,doc:v,setDoc:I,getDoc:S}}catch(t){console.error("Firebase services setup failed:",t),document.body.innerHTML="<h1>Ошибка настройки сервисов Firebase.</h1>"}const N={version:"1.4.0",changelog:{"1.4.0":['Улучшена синхронизация: добавлена кнопка "Поделиться" для отправки данных через мессенджеры.',"Добавлена история изменений приложения, чтобы вы всегда были в курсе новшеств.","Интерфейс настроек стал более информативным и удобным."],"1.3.0":["Добавлен экран предпросмотра меню перед финальным сохранением.","Полностью переработана и исправлена логика перегенерации отдельных блюд и дней.","Заменена иконка перегенерации на более современную.","В список покупок добавлено отображение остатка, необходимого к покупке.",'При отметке блюда как "приготовленное" ингредиенты списываются из запасов.',"На экран бюджета добавлена диаграмма для визуализации трат за последние 7 дней."],"1.2.0":["Добавлена информация об авторе и версии приложения.","При перегенерации меню теперь учитываются уже купленные продукты.","Улучшена логика обработки остатков блюд в меню, добавлена кнопка регенерации.","Обновлен дизайн кнопки полной перегенерации.","Улучшена проверка API ключа при запуске приложения."],"1.1.0":["Добавлена анимированная заставка-презентация.","Реализованы расширенные настройки (кухня, сложность, время).",'Улучшен ИИ для генерации списка покупок с учетом "магазинных" единиц.',"В шагах рецепта теперь отображается количество ингредиентов.",'Добавлена функция "Попросить купить" недостающие продукты.'],"1.0.0":["Первоначальный выпуск."]},state:{settings:{apiKey:null,family:[],preferences:"Без рыбы, без грибов",menuDuration:7,totalBudget:1e4,cuisine:"Любая",difficulty:"Любая"},menu:[],recipes:{},shoppingList:[],cookedMeals:{},timestamp:null,currentDayIndex:0},tempState:null,dom:{},wizard:{currentStep:1,totalSteps:3},currentRecipe:{id:null,step:0},timer:{interval:null,timeLeft:0,initialTime:0,isRunning:!1},async init(){this.cacheDom(),this.addEventListeners(),await this.loadState(),await new Promise(t=>{const e=setInterval(()=>{window.firebaseServices&&(clearInterval(e),t())},50)}),this.addEventListeners(),this.setupAuthListener()},cacheDom(){this.dom={splashScreen:document.getElementById("splash-screen"),startAppBtn:document.getElementById("start-app-btn"),screens:document.querySelectorAll(".screen"),welcomeScreen:document.getElementById("welcome-screen"),googleSigninBtn:document.getElementById("google-signin-btn"),setupScreen:document.getElementById("setup-screen"),mainScreen:document.getElementById("main-screen"),recipeScreen:document.getElementById("recipe-screen"),settingsScreen:document.getElementById("settings-screen"),previewScreen:document.getElementById("preview-screen"),setupWizard:document.getElementById("setup-wizard"),wizardSteps:document.querySelectorAll(".wizard-step"),wizardNav:document.getElementById("wizard-nav"),wizardBackBtn:document.getElementById("wizard-back-btn"),wizardNextBtn:document.getElementById("wizard-next-btn"),wizardStepCounter:document.getElementById("wizard-step-counter"),wizardFamilyContainer:document.getElementById("wizard-family-members-container"),wizardAddMemberBtn:document.getElementById("wizard-add-family-member-btn"),wizardDuration:document.getElementById("wizard-menu-duration"),wizardBudget:document.getElementById("wizard-total-budget"),wizardPreferences:document.getElementById("wizard-preferences"),wizardCuisine:document.getElementById("wizard-cuisine"),wizardDifficulty:document.getElementById("wizard-difficulty"),generationProgress:document.getElementById("generation-progress"),progressBar:document.getElementById("progress-bar"),progressStatus:document.getElementById("progress-status"),progressDetails:document.getElementById("progress-details"),previewMenuContainer:document.getElementById("preview-menu-container"),previewRegenerateAllBtn:document.getElementById("preview-regenerate-all-btn"),previewAcceptBtn:document.getElementById("preview-accept-btn"),mainHeaderTitle:document.getElementById("main-header-title"),openSettingsBtn:document.getElementById("open-settings-btn"),closeSettingsBtn:document.getElementById("close-settings-btn"),bottomNav:document.querySelector(".bottom-nav"),mainContents:document.querySelectorAll(".main-content"),dateSelector:document.getElementById("date-selector"),prevDayBtn:document.getElementById("prev-day-btn"),currentDateDisplay:document.getElementById("current-date-display"),nextDayBtn:document.getElementById("next-day-btn"),dailyMenuContainer:document.getElementById("daily-menu-container"),shoppingListContainer:document.getElementById("shopping-list-container"),shoppingProgressText:document.getElementById("shopping-progress-text"),shoppingProgress:document.getElementById("shopping-progress"),shoppingListTotal:document.getElementById("shopping-list-total"),backToMenuBtn:document.getElementById("back-to-menu-btn"),recipeTitle:document.getElementById("recipe-title"),stepIndicator:document.getElementById("step-indicator"),stepImage:document.getElementById("step-image"),stepDescription:document.getElementById("step-description"),timerSection:document.getElementById("timer-section"),timerDisplay:document.getElementById("timer-display"),startTimerBtn:document.getElementById("start-timer-btn"),pauseTimerBtn:document.getElementById("pause-timer-btn"),resetTimerBtn:document.getElementById("reset-timer-btn"),stepIngredientsList:document.getElementById("step-ingredients"),stepIngredientsTitle:document.getElementById("step-ingredients-title"),prevStepBtn:document.getElementById("prev-step-btn"),nextStepBtn:document.getElementById("next-step-btn"),budget:{pieProducts:document.getElementById("pie-products"),spentTotal:document.getElementById("budget-spent-total"),total:document.getElementById("budget-total"),remaining:document.getElementById("budget-remaining"),barChart:document.getElementById("bar-chart")},settings:{content:document.getElementById("settings-content"),duration:document.getElementById("settings-menu-duration"),budget:document.getElementById("settings-total-budget"),preferences:document.getElementById("settings-preferences"),cuisine:document.getElementById("settings-cuisine"),difficulty:document.getElementById("settings-difficulty"),saveBtn:document.getElementById("save-settings-btn"),familyContainer:document.getElementById("family-members-container"),addMemberBtn:document.getElementById("add-family-member-btn"),regenerateAllBtn:document.getElementById("regenerate-all-btn"),apiKeyInput:document.getElementById("settings-api-key"),saveApiKeyBtn:document.getElementById("save-api-key-btn"),runWizardBtn:document.getElementById("run-wizard-btn"),appVersionInfo:document.getElementById("app-version-info"),showChangelogBtn:document.getElementById("show-changelog-btn")},exportBtn:document.getElementById("export-btn"),importBtn:document.getElementById("import-btn"),importFileInput:document.getElementById("import-file-input"),devConsole:document.getElementById("dev-console"),logOutput:document.getElementById("log-output"),commandInput:document.getElementById("command-input"),notification:document.getElementById("notification"),notificationSound:document.getElementById("notification-sound"),modalOverlay:document.getElementById("modal-overlay"),modalTitle:document.getElementById("modal-title"),modalBody:document.getElementById("modal-body"),modalButtons:document.getElementById("modal-buttons")}},addEventListeners(){this.dom.startAppBtn.addEventListener("click",()=>{localStorage.setItem("hasSeenSplash","true"),this.showScreen("welcome-screen")}),this.dom.googleSigninBtn.addEventListener("click",()=>this.signInWithGoogle()),this.dom.wizardNextBtn.addEventListener("click",()=>this.navigateWizard(1)),this.dom.wizardBackBtn.addEventListener("click",()=>this.navigateWizard(-1)),this.dom.previewAcceptBtn.addEventListener("click",()=>this.acceptPreview()),this.dom.previewRegenerateAllBtn.addEventListener("click",()=>this.startGenerationProcess(!0)),this.dom.bottomNav.addEventListener("click",e=>this.handleNav(e)),this.dom.backToMenuBtn.addEventListener("click",()=>this.showScreen("main-screen")),this.dom.prevStepBtn.addEventListener("click",()=>this.navigateRecipeStep(-1)),this.dom.nextStepBtn.addEventListener("click",()=>this.navigateRecipeStep(1)),this.dom.prevDayBtn.addEventListener("click",()=>this.navigateMenuDay(-1)),this.dom.nextDayBtn.addEventListener("click",()=>this.navigateMenuDay(1)),this.dom.startTimerBtn.addEventListener("click",()=>this.startTimer()),this.dom.pauseTimerBtn.addEventListener("click",()=>this.pauseTimer()),this.dom.resetTimerBtn.addEventListener("click",()=>this.resetTimer()),this.dom.openSettingsBtn.addEventListener("click",()=>this.showSettingsPanel()),this.dom.closeSettingsBtn.addEventListener("click",()=>this.hideSettingsPanel()),this.dom.settings.saveBtn.addEventListener("click",()=>this.saveSettings()),this.dom.settings.addMemberBtn.addEventListener("click",()=>this.openFamilyMemberModal()),this.dom.settings.regenerateAllBtn.addEventListener("click",()=>this.confirmRegenerateAll()),this.dom.settings.saveApiKeyBtn.addEventListener("click",()=>this.saveApiKey()),this.dom.wizardAddMemberBtn.addEventListener("click",()=>this.openFamilyMemberModal(!0)),this.dom.settings.runWizardBtn.addEventListener("click",()=>{this.hideSettingsPanel(),this.showWizard()}),this.dom.settings.showChangelogBtn.addEventListener("click",()=>this.showChangelogModal()),this.dom.exportBtn.addEventListener("click",()=>this.exportData()),this.dom.importBtn.addEventListener("click",()=>this.dom.importFileInput.click()),this.dom.importFileInput.addEventListener("change",e=>this.importData(e));let t;document.body.addEventListener("touchstart",e=>{e.touches.length===3&&(t=setTimeout(()=>this.toggleDevConsole(),1e3))}),document.body.addEventListener("touchend",()=>clearTimeout(t)),this.dom.commandInput.addEventListener("keydown",e=>{e.key==="Enter"&&this.executeCommand(e.target.value)}),this.dom.modalOverlay.addEventListener("click",e=>{e.target===this.dom.modalOverlay&&this.hideModal()})},setupAuthListener(){const{auth:t,onAuthStateChanged:e}=window.firebaseServices;e(t,s=>{if(s)this.currentUser=s,this.dom.openSettingsBtn.innerHTML=`<img src="${s.photoURL}" style="width: 32px; height: 32px; border-radius: 50%;" alt="User avatar">`,this.loadState();else{this.currentUser=null,this.dom.openSettingsBtn.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg>';const n=localStorage.getItem("hasSeenSplash")==="true";this.showScreen(n?"welcome-screen":"splash-screen")}})},async signInWithGoogle(){this.showNotification("Открываю окно входа...","loading");const{auth:t,provider:e,signInWithPopup:s}=window.firebaseServices;try{await s(t,e),this.hideNotification()}catch(n){console.error("Google Sign-in failed:",n),this.showNotification(`Ошибка входа: ${n.message}`,"error")}},async saveState(){try{await I(v(w,"user-data","main-config"),this.state)}catch(t){console.error("Error saving state to Firestore:",t),this.showNotification("Ошибка сохранения данных.","error")}},async loadState(){try{const t=v(w,"user-data","main-config"),e=await S(t);if(e.exists()){const s=e.data();s.settings&&(this.state=s,this.state.settings.family||(this.state.settings.family=[]),this.state.settings.menuDuration||(this.state.settings.menuDuration=7),this.state.cookedMeals||(this.state.cookedMeals={}),this.state.settings.cuisine||(this.state.settings.cuisine="Любая"),this.state.settings.difficulty||(this.state.settings.difficulty="Любая"),this.state.currentDayIndex===void 0&&(this.state.currentDayIndex=0),(this.state.shoppingList||[]).forEach(n=>{(n.items||[]).forEach(i=>{var a;i.purchases===void 0&&(i.purchases=i.completed?[{qty:((a=i.shoppingSuggestion)==null?void 0:a.qty)||1,price:i.price,date:new Date().toISOString()}]:[]),i.purchases.forEach(o=>{o.date||(o.date=new Date().toISOString())}),i.consumedQty===void 0&&(i.consumedQty=0)})}))}else console.log("No saved state found in Firestore.")}catch(t){console.error("Error loading state from Firestore:",t),this.showNotification("Ошибка загрузки данных.","error")}this.hideNotification()},resetState(){const{signOut:t,auth:e}=window.firebaseServices;t(e).catch(s=>console.error("Sign out failed",s))},showScreen(t){this.dom.screens.forEach(e=>{const s=e.id===t;e.classList.toggle("hidden",!s),["recipe-screen","splash-screen","settings-screen"].includes(e.id)&&e.classList.toggle("active",s)}),t==="main-screen"?(document.getElementById("main-screen").classList.remove("hidden"),this.renderAll()):["setup-screen","welcome-screen","preview-screen"].includes(t)&&document.getElementById(t).classList.remove("hidden")},showWizard(){this.showScreen("setup-screen"),this.wizard.currentStep=1,this.updateWizardView()},updateWizardView(){const{currentStep:t,totalSteps:e}=this.wizard;this.dom.wizardDuration.value=this.state.settings.menuDuration,this.dom.wizardBudget.value=this.state.settings.totalBudget,this.dom.wizardPreferences.value=this.state.settings.preferences,this.dom.wizardCuisine.value=this.state.settings.cuisine,this.dom.wizardDifficulty.value=this.state.settings.difficulty,this.dom.wizardNav.classList.remove("hidden"),this.dom.generationProgress.classList.add("hidden"),this.dom.setupWizard.classList.remove("hidden"),this.dom.wizardStepCounter.classList.remove("hidden"),this.dom.wizardStepCounter.textContent=`Шаг ${t} из ${e}`,this.dom.wizardSteps.forEach(n=>{n.classList.toggle("active",parseInt(n.dataset.step)===t)}),this.dom.wizardBackBtn.classList.toggle("hidden",t===1),this.dom.wizardNextBtn.textContent=t===e?"Начать генерацию":"Далее";let s=!1;switch(t){case 1:s=this.state.settings.family.length>0;break;default:s=!0}this.dom.wizardNextBtn.disabled=!s,t===1&&this.renderFamilyMembers(!0)},async navigateWizard(t){const{currentStep:e,totalSteps:s}=this.wizard;if(t>0){if(e===2)this.state.settings.menuDuration=parseInt(this.dom.wizardDuration.value)||7,this.state.settings.totalBudget=parseInt(this.dom.wizardBudget.value)||1e4,this.state.settings.preferences=this.dom.wizardPreferences.value,this.state.settings.cuisine=this.dom.wizardCuisine.value,this.state.settings.difficulty=this.dom.wizardDifficulty.value;else if(e===s){await this.saveState(),await this.startGenerationProcess();return}}this.wizard.currentStep+=t,this.updateWizardView()},async startGenerationProcess(t=!1,e="",s=""){if(!this.state.settings.apiKey){alert("API ключ не найден."),this.showWizard();return}this.dom.setupWizard.classList.add("hidden"),this.dom.wizardNav.classList.add("hidden"),this.dom.wizardStepCounter.classList.add("hidden"),this.dom.generationProgress.classList.remove("hidden"),this.showScreen("setup-screen");try{this.ai=new f({apiKey:this.state.settings.apiKey}),await this.updateProgress(1,2,"Подключение к Google Gemini…","Проверка ключа..."),await this.ai.models.generateContent({model:"gemini-2.5-flash",contents:"test"}),this.logToConsole("✅ API KEY VALIDATED"),this.dom.progressDetails.innerHTML+="<br>✅ Ключ активен. Доступ к Gemini получен.",await this.updateProgress(2,2,"Магия ИИ в действии…","Создаем меню, рецепты и список покупок...");const n=await this.generateComprehensiveData(e,s);if(!n||!n.menu||n.menu.length===0)throw new Error("Menu generation failed or returned empty data. Please check your prompt and settings.");this.tempState=n,this.renderPreview(),this.showScreen("preview-screen")}catch(n){console.error("Generation failed:",n),this.updateProgress(0,2,"Ошибка!",`Не удалось сгенерировать меню. ${n.message}`),this.dom.generationProgress.innerHTML+='<button class="primary-button" onclick="window.location.reload()" style="margin-top: 20px;">Назад к настройкам</button>',t||(this.state.settings.apiKey=null,this.saveState())}},async updateProgress(t,e,s,n){return new Promise(i=>{const a=t/e*100;this.dom.progressBar.style.width=`${a}%`,this.dom.progressStatus.textContent=`Шаг ${t}/${e}: ${s}`,this.dom.progressDetails.innerHTML=n,setTimeout(i,300)})},async makeGeminiRequest(t,e){this.logToConsole(`🟡 REQUEST: ${t.substring(0,50)}...`);let s=3;for(;s>0;)try{const i=(await this.ai.models.generateContent({model:"gemini-2.5-flash",contents:t,config:{responseMimeType:"application/json",responseSchema:e}})).text.trim(),a=JSON.parse(i);return this.logToConsole("✅ RESPONSE RECEIVED"),a}catch(n){if(s--,this.logToConsole(`🔴 ERROR: ${n}. Retrying... (${s} left)`),s===0)throw n;await new Promise(i=>setTimeout(i,1e3))}},async generateComprehensiveData(t="",e=""){const{family:s,menuDuration:n,preferences:i,cuisine:a,difficulty:o,totalBudget:r}=this.state.settings,d=s.map(g=>`- ${g.name}: Вес ${g.weight}кг, Рост ${g.height}см. Цель: ${{lose:"постепенное снижение веса",maintain:"поддержание текущего веса",gain:"набор мышечной массы"}[g.goal]}.`).join(`
`);let l=`Сгенерируй одним JSON-ответом полный план питания. Ответ должен содержать три ключа верхнего уровня: "menu", "recipes", "shoppingList".

1.  **menu**: Разнообразное меню на ${n} дней (с воскресенья по субботу) для семьи:
${d}.
    *   Учти их потребности в калориях.
    *   Общие предпочтения: ${i}.
    *   Предпочитаемая кухня: ${a}.
    *   Желаемая сложность блюд: ${o}.
    *   Каждый день должен включать: Завтрак, Перекус, Обед, Полдник, Ужин.
    *   Иногда используй остатки от ужина на обед следующего дня (помечай их как "Название блюда (остатки)").

2.  **recipes**: Массив с детальными рецептами для КАЖДОГО уникального блюда из сгенерированного меню (кроме блюд с пометкой "остатки").
    *   Каждый рецепт должен иметь уникальный 'id' (например, 'borsch-s-govyadinoy').
    *   Название 'name' рецепта должно ТОЧНО соответствовать названию в меню.
    *   Включи полный список ингредиентов с количеством для семьи из ${s.length} человек.
    *   Предоставь пошаговые инструкции 'steps'. В каждом шаге укажи используемые ингредиенты и их количество.

3.  **shoppingList**: Сводный список покупок, сгруппированный по категориям.
    *   Суммируй ВСЕ ингредиенты из ВСЕХ сгенерированных рецептов.
    *   Категории: "Мясо и птица", "Молочные и яйца", "Овощи и зелень", "Фрукты и орехи", "Бакалея", "Хлеб и выпечка", "Напитки", "Прочее".
    *   Для каждого продукта укажи общее необходимое количество 'totalNeeded', а затем предложи 'shoppingSuggestion' — разумное количество для покупки в магазине, округляя в большую сторону до стандартной упаковки (например, для 750г муки предложи купить 1кг).
    *   Укажи примерную цену 'price' в рублях для 'shoppingSuggestion'. Общая стоимость всех продуктов не должна превышать бюджет ${r} рублей.
`;t&&(l+=`
ВАЖНО: При составлении меню отдай приоритет блюдам, в которых используются уже купленные продукты. Список купленных продуктов: ${t}.`),e&&(l+=`
ОСОБОЕ УКАЗАНИЕ: ${e}`);const h={type:c.ARRAY,items:{type:c.OBJECT,properties:{name:{type:c.STRING},quantity:{type:c.STRING,description:"Количество и единица измерения, например '200 г' или '1 шт'"}},required:["name","quantity"]}},p={type:c.OBJECT,properties:{menu:{type:c.ARRAY,description:"Меню на неделю.",items:{type:c.OBJECT,properties:{day:{type:c.STRING},meals:{type:c.OBJECT,properties:{breakfast:{type:c.STRING},snack1:{type:c.STRING},lunch:{type:c.STRING},snack2:{type:c.STRING},dinner:{type:c.STRING}},required:["breakfast","snack1","lunch","snack2","dinner"]}},required:["day","meals"]}},recipes:{type:c.ARRAY,description:"Рецепты для уникальных блюд из меню.",items:{type:c.OBJECT,properties:{id:{type:c.STRING,description:"Уникальный идентификатор рецепта"},name:{type:c.STRING,description:"Название, соответствующее меню"},ingredients:h,steps:{type:c.ARRAY,items:{type:c.OBJECT,properties:{description:{type:c.STRING},time:{type:c.NUMBER,description:"Время в минутах. 0 если таймер не нужен."},ingredients:h},required:["description","time","ingredients"]}}},required:["id","name","ingredients","steps"]}},shoppingList:{type:c.ARRAY,description:"Список покупок, сгруппированный по категориям.",items:{type:c.OBJECT,properties:{category:{type:c.STRING},items:{type:c.ARRAY,items:{type:c.OBJECT,properties:{name:{type:c.STRING},totalNeeded:{type:c.OBJECT,properties:{qty:{type:c.NUMBER},unit:{type:c.STRING}}},shoppingSuggestion:{type:c.OBJECT,properties:{qty:{type:c.NUMBER},unit:{type:c.STRING}}},price:{type:c.NUMBER}},required:["name","totalNeeded","shoppingSuggestion","price"]}}},required:["category","items"]}}},required:["menu","recipes","shoppingList"]},m=await this.makeGeminiRequest(l,p),u={};return m.recipes&&m.recipes.forEach(g=>{u[g.id]=g}),m.shoppingList&&m.shoppingList.forEach(g=>{(g.items||[]).forEach(y=>{y.purchases=[],y.consumedQty=0})}),{menu:m.menu||[],recipes:u,shoppingList:m.shoppingList||[]}},renderAll(){this.renderMenu(),this.renderShoppingList(),this.renderBudget()},getRegenerateIcon(){return'<svg class="regenerate-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M10.868 2.884c.321-.772 1.415-.772 1.736 0l1.681 4.06c.064.155.19.284.348.348l4.06 1.68c.772.321.772 1.415 0 1.736l-4.06 1.68a.5.5 0 00-.348.349l-1.68 4.06c-.321-.772-1.415-.772-1.736 0l-1.681-4.06a.5.5 0 00-.348-.348l-4.06-1.68c-.772-.321-.772-1.415 0-1.736l4.06-1.68a.5.5 0 00.348-.348l1.68-4.06z" clip-rule="evenodd" /></svg>'},getSortedMenu(){const t=["ВОСКРЕСЕНЬЕ","ПОНЕДЕЛЬНИК","ВТОРНИК","СРЕДА","ЧЕТВЕРГ","ПЯТНИЦА","СУББОТА"];return JSON.parse(JSON.stringify(this.state.menu||[])).sort((s,n)=>t.indexOf(s.day.toUpperCase())-t.indexOf(n.day.toUpperCase()))},renderMenu(){if(!this.state.menu||this.state.menu.length===0){this.dom.dailyMenuContainer.innerHTML='<p style="text-align: center; color: var(--soft-text); margin-top: 30px;">Меню еще не создано. Перейдите в настройки для генерации.</p>',this.dom.currentDateDisplay.textContent="Нет меню";return}const t=this.getSortedMenu();(this.state.currentDayIndex>=t.length||this.state.currentDayIndex<0)&&(this.state.currentDayIndex=0);const e=t[this.state.currentDayIndex];if(!e){console.error("No day data found for index:",this.state.currentDayIndex);return}this.dom.currentDateDisplay.textContent=e.day;const s=(n,i,a,o)=>{const r=(i||"Не указано").replace(/\s*\(остатки\)/i,""),d=(i||"").includes("(остатки)"),l=i&&i.trim()!==""&&i.trim()!=="Не указано",h=!d&&l,p=this.state.cookedMeals[o]&&this.state.cookedMeals[o].includes(a);return`
            <div class="meal ${h?"clickable":""} ${p?"cooked":""}" data-meal-name="${i||""}" data-meal-key="${a}" data-day-name="${o}">
                <button class="cooked-toggle" data-day-name="${o}" data-meal-key="${a}" aria-label="Отметить как приготовленное">
                    <svg viewBox="0 0 24 24"><path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/></svg>
                </button>
                <span class="meal-icon">${n}</span>
                <span class="meal-name">${r}</span>
                ${d?'<span class="leftover-icon">🔄</span>':""}
                ${l?`<button class="regenerate-btn" title="Перегенерировать блюдо">${this.getRegenerateIcon()}</button>`:""}
            </div>`};this.dom.dailyMenuContainer.innerHTML=`
            ${s("☀️",e.meals.breakfast,"breakfast",e.day)}
            ${s("🍎",e.meals.snack1,"snack1",e.day)}
            ${s("🍲",e.meals.lunch,"lunch",e.day)}
            ${s("🥛",e.meals.snack2,"snack2",e.day)}
            ${s("🌙",e.meals.dinner,"dinner",e.day)}
        `,this.dom.dailyMenuContainer.querySelectorAll(".meal.clickable").forEach(n=>{n.addEventListener("click",i=>{if(i.target.closest(".regenerate-btn")||i.target.closest(".cooked-toggle"))return;const a=i.currentTarget.dataset.mealName.replace(/\s*\(остатки\)/i,"").trim(),o=Object.values(this.state.recipes).find(r=>r.name===a);o?this.checkIngredientsForRecipe(o.id):a&&this.showNotification(`Рецепт для "${a}" не найден.`,"error")})}),this.dom.dailyMenuContainer.querySelectorAll(".cooked-toggle").forEach(n=>{n.addEventListener("click",i=>{i.stopPropagation();const{dayName:a,mealKey:o}=i.currentTarget.dataset;this.toggleCookedStatus(a,o)})}),this.dom.dailyMenuContainer.querySelectorAll(".regenerate-btn").forEach(n=>{n.addEventListener("click",i=>{i.stopPropagation();const o=i.currentTarget.closest(".meal"),{dayName:r,mealKey:d}=o.dataset;this.openRegenerateModal("meal",{dayName:r,mealKey:d})})})},navigateMenuDay(t){if(!this.state.menu||this.state.menu.length===0)return;const e=this.state.menu.length;let s=this.state.currentDayIndex+t;s<0?s=e-1:s>=e&&(s=0),this.state.currentDayIndex=s,this.saveState(),this.renderMenu()},toggleCookedStatus(t,e){var r;this.state.cookedMeals[t]||(this.state.cookedMeals[t]=[]);const s=!this.state.cookedMeals[t].includes(e),n=s?1:-1,i=(((r=this.state.menu.find(d=>d.day===t))==null?void 0:r.meals[e])||"").replace(/\s*\(остатки\)/i,"").trim(),a=Object.values(this.state.recipes).find(d=>d.name===i);a&&a.ingredients&&a.ingredients.forEach(d=>{const l=this.findShopItemByName(d.name),h=this.parseQuantity(d.quantity);l&&h&&(l.consumedQty===void 0&&(l.consumedQty=0),l.consumedQty+=n*h.qty,l.consumedQty=Math.max(0,l.consumedQty))});const o=this.state.cookedMeals[t].indexOf(e);o>-1?this.state.cookedMeals[t].splice(o,1):this.state.cookedMeals[t].push(e),this.saveState(),this.renderMenu(),this.showNotification(s?"Блюдо отмечено как приготовленное!":"Отметка о приготовлении снята.","success")},findShopItemByName(t){if(!t)return null;const e=t.toLowerCase().trim().replace(/ё/g,"е");for(const s of this.state.shoppingList)for(const n of s.items){const i=n.name.toLowerCase().trim().replace(/ё/g,"е");if(i.includes(e)||e.includes(i))return n}return null},parseQuantity(t){if(typeof t!="string")return null;const e=t.match(/(\d+[\.,]?\d*)\s*([а-яА-Яa-zA-Z]+)?/);return e?{qty:parseFloat(e[1].replace(",",".")),unit:(e[2]||"").toLowerCase()}:null},renderShoppingList(){if(!this.state.shoppingList)return;this.dom.shoppingListContainer.innerHTML="",this.state.shoppingList.forEach((e,s)=>{const n=document.createElement("div");n.className="category-group";const i=e.items.map((a,o)=>{const r=(a.purchases||[]).reduce((g,y)=>g+y.qty,0),d=Math.max(0,a.shoppingSuggestion.qty-r),l=d<=0,h=a.shoppingSuggestion.qty>0?Math.min(r/a.shoppingSuggestion.qty*100,100):0,p=10,m=2*Math.PI*p,u=m-h/100*m;return`
                <li class="shopping-item ${l?"completed":""}" data-cat-index="${s}" data-item-index="${o}">
                    <div class="item-checkbox-progress">
                        <svg viewBox="0 0 24 24">
                          <circle class="bg" cx="12" cy="12" r="${p}"></circle>
                          <circle class="progress" cx="12" cy="12" r="${p}" stroke-dasharray="${m}" stroke-dashoffset="${u}"></circle>
                        </svg>
                        <span class="checkmark">✔</span>
                    </div>
                    <div class="item-details">
                        <span class="item-name">${a.name}</span>
                        <div class="item-quantity">
                           Нужно: ${a.shoppingSuggestion.qty.toLocaleString("ru-RU")} ${a.shoppingSuggestion.unit} <br>
                           <span style="font-weight: bold; color: ${d>0?"var(--warning-color)":"var(--success-color)"};">Осталось купить: ${d.toLocaleString("ru-RU")} ${a.shoppingSuggestion.unit}</span>
                        </div>
                    </div>
                    <span class="item-price">${a.price} ₽</span>
                </li>
            `}).join("");n.innerHTML=`
                <button class="category-toggle">${e.category} ▼</button>
                <ul class="category-items">${i}</ul>
            `,this.dom.shoppingListContainer.appendChild(n)}),this.dom.shoppingListContainer.querySelectorAll(".shopping-item").forEach(e=>{e.addEventListener("click",s=>{const{catIndex:n,itemIndex:i}=s.currentTarget.dataset;this.openPurchaseModal(parseInt(n),parseInt(i))})}),this.dom.shoppingListContainer.querySelectorAll(".category-toggle").forEach(e=>{e.addEventListener("click",s=>{const n=s.target.nextElementSibling;n.classList.toggle("collapsed"),s.target.innerHTML=n.classList.contains("collapsed")?s.target.innerHTML.replace("▼","▶"):s.target.innerHTML.replace("▶","▼")})}),this.updateShoppingProgress();const t=this.state.shoppingList.flatMap(e=>e.items).reduce((e,s)=>e+(s.price||0),0);this.dom.shoppingListTotal.innerHTML=`<span>Примерная сумма:</span> ${t.toLocaleString("ru-RU")} ₽`},updateShoppingProgress(){if(!this.state.shoppingList)return;const t=this.state.shoppingList.flatMap(i=>i.items||[]);if(t.length===0)return;const e=t.length,s=t.filter(i=>(i.purchases||[]).reduce((o,r)=>o+r.qty,0)>=i.shoppingSuggestion.qty).length,n=e>0?s/e*100:0;this.dom.shoppingProgress.style.width=`${n}%`,this.dom.shoppingProgressText.textContent=`${s}/${e} куплено`},renderBudget(){const t=this.state.settings.totalBudget,e=this.state.shoppingList.flatMap(i=>i.items||[]).flatMap(i=>i.purchases||[]).reduce((i,a)=>i+a.price,0),s=t-e,n=t>0?Math.min(e/t*100,100):0;this.dom.budget.pieProducts.style.strokeDasharray=`${n} 100`,this.dom.budget.spentTotal.innerHTML=`${e.toLocaleString("ru-RU")} ₽ <span>потрачено</span>`,this.dom.budget.total.textContent=`${t.toLocaleString("ru-RU")} ₽`,this.dom.budget.remaining.textContent=`${s.toLocaleString("ru-RU")} ₽`,this.dom.budget.remaining.className=`amount ${s>=0?"ok":"warning"}`,this.renderBudgetChart()},renderBudgetChart(){const t=this.state.shoppingList.flatMap(i=>i.items||[]).flatMap(i=>i.purchases||[]),e={};for(let i=6;i>=0;i--){const a=new Date;a.setDate(a.getDate()-i);const o=a.toISOString().split("T")[0];e[o]={amount:0,label:a.toLocaleDateString("ru-RU",{weekday:"short"})}}t.forEach(i=>{const a=new Date(i.date).toISOString().split("T")[0];e[a]&&(e[a].amount+=i.price)});const s=Object.values(e).map(i=>i.amount),n=Math.max(...s,1);this.dom.budget.barChart.innerHTML=Object.values(e).map(i=>`
                <div class="bar-chart-item">
                    <div class="bar" style="height: ${i.amount/n*100}%;">
                        ${i.amount>0?`<div class="bar-value">${Math.round(i.amount)}</div>`:""}
                    </div>
                    <div class="bar-label">${i.label}</div>
                </div>
            `).join("")},checkIngredientsForRecipe(t){const e=this.state.recipes[t];if(!e||!e.ingredients){this.showRecipe(t);return}const s=[];e.ingredients.forEach(n=>{const i=this.findShopItemByName(n.name),a=this.parseQuantity(n.quantity);i&&a?(i.purchases||[]).reduce((d,l)=>d+l.qty,0)-(i.consumedQty||0)<a.qty&&s.push(i):s.push({name:n.name,shoppingSuggestion:{qty:(a==null?void 0:a.qty)||1,unit:(a==null?void 0:a.unit)||"шт"}})}),s.length>0?this.showMissingIngredientsWarning(s,t):this.showRecipe(t)},showRecipe(t){if(this.currentRecipe.id=t,this.currentRecipe.step=0,!this.state.recipes[t]){this.showNotification(`Не удалось найти рецепт с ID: ${t}.`,"error");return}this.showScreen("recipe-screen"),this.renderRecipeStep()},renderRecipeStep(){const{id:t,step:e}=this.currentRecipe,s=this.state.recipes[t];if(!s||!s.steps||!s.steps[e]){console.error("Invalid recipe or step:",t,e),this.showNotification("Ошибка при загрузке рецепта.","error"),this.showScreen("main-screen");return}const n=s.steps[e];this.dom.recipeTitle.textContent=s.name,this.dom.stepIndicator.textContent=`Шаг ${e+1}/${s.steps.length}`,this.dom.stepDescription.textContent=n.description,this.dom.stepImage.style.opacity="0.5",n.imageUrl?(this.dom.stepImage.src=n.imageUrl,this.dom.stepImage.alt=n.description,this.dom.stepImage.style.opacity="1"):(this.dom.stepImage.src="",this.dom.stepImage.alt="Генерация изображения...",this.generateStepImage(t,e)),this.stopTimer(),n.time&&n.time>0?(this.timer.initialTime=n.time*60,this.resetTimer(),this.dom.timerSection.classList.remove("hidden")):this.dom.timerSection.classList.add("hidden"),this.dom.stepIngredientsList.innerHTML="",n.ingredients&&n.ingredients.length>0?(this.dom.stepIngredientsTitle.classList.remove("hidden"),n.ingredients.forEach(i=>{const a=document.createElement("li"),o=this.findShopItemByName(i.name),r=this.parseQuantity(i.quantity);let d="unknown",l="❔";o&&r&&((o.purchases||[]).reduce((m,u)=>m+u.qty,0)-(o.consumedQty||0)>=r.qty?(d="completed",l="✅"):(d="missing",l="⚠️")),a.innerHTML=`<span><span class="ingredient-status ${d}">${l}</span> ${i.name}</span> <span class="ingredient-quantity">${i.quantity}</span>`,this.dom.stepIngredientsList.appendChild(a)})):this.dom.stepIngredientsTitle.classList.add("hidden"),this.dom.prevStepBtn.disabled=e===0,this.dom.nextStepBtn.textContent=e===s.steps.length-1?"Завершить ✅":"Далее →"},async generateStepImage(t,e){if(!this.ai)if(this.state.settings.apiKey)this.ai=new f({apiKey:this.state.settings.apiKey});else return;try{const i=`Food photography, realistic, high-detail photo of a cooking step: "${this.state.recipes[t].steps[e].description}"`,r=`data:image/jpeg;base64,${(await this.ai.models.generateImages({model:"imagen-4.0-generate-001",prompt:i,config:{numberOfImages:1,outputMimeType:"image/jpeg",aspectRatio:"4:3"}})).generatedImages[0].image.imageBytes}`;this.currentRecipe.id===t&&this.currentRecipe.step===e&&(this.dom.stepImage.src=r,this.dom.stepImage.style.opacity="1"),this.state.recipes[t].steps[e].imageUrl=r,this.saveState()}catch(s){console.error("Image generation failed:",s),this.currentRecipe.id===t&&this.currentRecipe.step===e&&(this.dom.stepImage.alt="Не удалось загрузить изображение")}},navigateRecipeStep(t){const{id:e,step:s}=this.currentRecipe,n=this.state.recipes[e];if(t>0&&s===n.steps.length-1){this.finishCooking();return}const i=s+t;i>=0&&i<n.steps.length&&(this.currentRecipe.step=i,this.renderRecipeStep())},finishCooking(){const{id:t}=this.currentRecipe,e=this.state.recipes[t];let s=null;for(const n of this.state.menu){for(const i in n.meals)if((n.meals[i]||"").replace(/\s*\(остатки\)/i,"").trim()===e.name){s={dayName:n.day,mealKey:i};break}if(s)break}s&&this.toggleCookedStatus(s.dayName,s.mealKey),this.showNotification(`"${e.name}" приготовлено!`,"success"),this.showScreen("main-screen")},startTimer(){this.timer.isRunning||this.timer.timeLeft<=0||(this.timer.isRunning=!0,this.timer.interval=setInterval(()=>{this.timer.timeLeft--,this.updateTimerDisplay(),this.timer.timeLeft<=0&&this.stopTimer(!0)},1e3))},pauseTimer(){this.timer.isRunning=!1,clearInterval(this.timer.interval)},stopTimer(t=!1){this.pauseTimer(),t&&(this.dom.timerDisplay.textContent="Готово!",this.showNotification("Таймер завершен!","success"),this.dom.notificationSound.play().catch(e=>console.log("Audio play failed",e)))},resetTimer(){this.stopTimer(),this.timer.timeLeft=this.timer.initialTime,this.updateTimerDisplay()},updateTimerDisplay(){const t=Math.floor(this.timer.timeLeft/60),e=this.timer.timeLeft%60;this.dom.timerDisplay.textContent=`${String(t).padStart(2,"0")}:${String(e).padStart(2,"0")}`},handleNav(t){const e=t.target.closest(".nav-button");if(!e)return;this.dom.bottomNav.querySelectorAll(".nav-button").forEach(n=>n.classList.remove("active")),e.classList.add("active");const s=e.dataset.content;this.dom.mainHeaderTitle.textContent=e.dataset.title,this.dom.mainContents.forEach(n=>{n.classList.toggle("active",n.id===s)}),s==="budget-content"&&this.renderBudget()},showNotification(t,e="success"){this.dom.notification.textContent=t,this.dom.notification.className=e,this.dom.notification.classList.add("show"),e!=="loading"&&setTimeout(()=>{this.dom.notification.classList.remove("show")},3e3)},hideNotification(){this.dom.notification.classList.remove("show")},showModal(t,e,s){this.dom.modalTitle.textContent=t,this.dom.modalBody.innerHTML=e,this.dom.modalButtons.innerHTML="",s.forEach(n=>{const i=document.createElement("button");i.textContent=n.text,i.className=`modal-button ${n.class}`,i.addEventListener("click",()=>{n.action(),n.closes!==!1&&this.hideModal()}),this.dom.modalButtons.appendChild(i)}),this.dom.modalOverlay.classList.add("visible")},hideModal(){this.dom.modalOverlay.classList.remove("visible")},showApiKeyHelpModal(){this.showModal("Как получить API ключ?",`
            <style>
                .help-step { margin-bottom: 20px; }
                .help-step h5 { font-family: var(--font-nunito); font-weight: 700; color: var(--accent-color); margin: 0 0 8px 0; font-size: 18px; }
                .help-step p { margin: 0 0 10px 0; line-height: 1.5; font-size: 15px; }
                .help-step a { color: var(--accent-color); font-weight: 600; }
                .connection-check { background-color: var(--card-accent-bg); padding: 15px; border-radius: 12px; text-align: center; }
                #connection-status { font-weight: 600; margin-top: 10px; min-height: 20px; }
            </style>
            <div class="help-step">
                <h5>Шаг 1: Получение ключа</h5>
                <p>Для работы приложения нужен ваш персональный бесплатный ключ (API Key) от Google Gemini.</p>
                <p>1. Перейдите на сайт <a href="https://aistudio.google.com/app/apikey" target="_blank">Google AI Studio</a>.</p>
                <p>2. Нажмите на кнопку <strong>"Create API key in new project"</strong>.</p>
                <p>3. Скопируйте сгенерированный ключ и вставьте его в поле на предыдущем экране.</p>
            </div>
            <div class="help-step">
                <h5>Шаг 2: Проверка доступа</h5>
                <p>Иногда сервисы Google могут быть недоступны в некоторых регионах. Давайте проверим ваш доступ.</p>
                <div class="connection-check">
                    <button class="secondary-button" id="check-connection-btn" style="height: 45px; font-size: 16px;">Проверить доступ</button>
                    <div id="connection-status"></div>
                </div>
            </div>
            <div class="help-step" id="troubleshooting-step" style="display: none;">
                <h5>Что делать, если доступа нет?</h5>
                <p>Если вы видите ошибку или сайт из Шага 1 не открывается, это значит, что сервисы Google AI ограничены в вашем регионе.</p>
                <p><strong>Решение:</strong> Для доступа к таким сервисам можно использовать VPN. VPN изменяет ваше виртуальное местоположение.</p>
                <p>1. Включите любой VPN-сервис и выберите страну, где Gemini доступен (например, США, Великобритания).</p>
                <p>2. Повторите <strong>Шаг 1</strong> и <strong>Шаг 2</strong> с включенным VPN.</p>
                <p>После получения ключа, VPN можно будет отключить для работы с приложением.</p>
            </div>
        `,[{text:"Понятно",class:"primary",action:()=>{}}]),document.getElementById("check-connection-btn").addEventListener("click",async e=>{const s=e.target,n=document.getElementById("connection-status"),i=document.getElementById("troubleshooting-step");s.disabled=!0,n.textContent="Проверяем...",n.style.color="var(--soft-text)";try{await fetch("https://generativelanguage.googleapis.com/$rpc/google.ai.generativelanguage.v1beta.ModelService/ListModels",{method:"GET",mode:"cors"}),n.textContent="✅ Отлично! Доступ есть.",n.style.color="var(--success-color)",i.style.display="none"}catch(a){console.error("Connection check failed:",a),n.textContent="⚠️ Ошибка! Доступ, скорее всего, ограничен.",n.style.color="var(--danger-color)",i.style.display="block"}finally{s.disabled=!1}})},openPurchaseModal(t,e){const s=this.state.shoppingList[t].items[e],n=(s.purchases||[]).reduce((r,d)=>r+d.qty,0),i=Math.max(0,s.shoppingSuggestion.qty-n),a=`
            <p>Нужно купить: ${s.shoppingSuggestion.qty} ${s.shoppingSuggestion.unit}. Осталось: ${i} ${s.shoppingSuggestion.unit}</p>
            <div class="modal-form-group">
                <label for="purchase-qty">Сколько купили (${s.shoppingSuggestion.unit})</label>
                <input type="number" id="purchase-qty" class="modal-input" value="${i>0?i:""}" placeholder="0">
            </div>
            <div class="modal-form-group">
                <label for="purchase-price">Цена за эту покупку (₽)</label>
                <input type="number" id="purchase-price" class="modal-input" placeholder="0">
            </div>
        `,o=[{text:"Отмена",class:"secondary",action:()=>{}},{text:"Сохранить",class:"primary",action:()=>{const r=parseFloat(document.getElementById("purchase-qty").value)||0,d=parseFloat(document.getElementById("purchase-price").value)||0;r>0&&(s.purchases||(s.purchases=[]),s.purchases.push({qty:r,price:d,date:new Date().toISOString()}),this.saveState(),this.renderShoppingList(),this.renderBudget())}}];this.showModal(`Покупка: ${s.name}`,a,o)},async shareMissingItems(t){const e=`Привет! Пожалуйста, купи для ужина:
`+t.map(s=>`- ${s.name} (${s.shoppingSuggestion.qty} ${s.shoppingSuggestion.unit})`).join(`
`);try{navigator.share?await navigator.share({title:"Список покупок",text:e}):(await navigator.clipboard.writeText(e),this.showNotification("Список скопирован в буфер обмена!"))}catch(s){console.error("Share/Copy failed:",s),this.showNotification("Не удалось поделиться/скопировать.","error")}},showMissingIngredientsWarning(t,e){const s=`
            <p>Для приготовления этого блюда вам не хватает следующих продуктов:</p>
            <ul>${t.map(i=>`<li>${i.name}</li>`).join("")}</ul>
            <p>Хотите все равно продолжить или попросить кого-то сходить в магазин?</p>
        `,n=[{text:"Все равно готовить",class:"primary",action:()=>this.showRecipe(e)},{text:"🛒 Попросить купить",class:"secondary",action:()=>this.shareMissingItems(t)},{text:"Назад к меню",class:"secondary",action:()=>{}}];this.showModal("Не хватает ингредиентов",s,n)},showSettingsPanel(){this.renderSettings(),this.dom.settingsScreen.classList.remove("hidden"),setTimeout(()=>this.dom.settingsScreen.classList.add("active"),10)},hideSettingsPanel(){this.dom.settingsScreen.classList.remove("active"),setTimeout(()=>{this.dom.settingsScreen.classList.add("hidden")},500)},renderSettings(){const t=this.state.settings;this.dom.settings.duration.value=t.menuDuration,this.dom.settings.budget.value=t.totalBudget,this.dom.settings.preferences.value=t.preferences,this.dom.settings.cuisine.value=t.cuisine,this.dom.settings.difficulty.value=t.difficulty,this.dom.settings.apiKeyInput.value=t.apiKey||"",this.dom.settings.appVersionInfo.textContent=`Версия приложения: ${this.version}`,this.renderFamilyMembers()},saveSettings(){const t=this.state.settings;t.menuDuration=parseInt(this.dom.settings.duration.value)||7,t.totalBudget=parseInt(this.dom.settings.budget.value)||1e4,t.preferences=this.dom.settings.preferences.value,t.cuisine=this.dom.settings.cuisine.value,t.difficulty=this.dom.settings.difficulty.value,this.saveState(),this.renderBudget(),this.showNotification("Настройки сохранены. Чтобы они применились, перегенерируйте меню.")},async saveApiKey(){const t=this.dom.settings.apiKeyInput.value.trim();if(!t){this.showNotification("API ключ не может быть пустым","error");return}this.showNotification("Проверка ключа...","loading");try{const e=new f({apiKey:t});await e.models.generateContent({model:"gemini-2.5-flash",contents:"test"}),this.state.settings.apiKey=t,this.ai=e,this.saveState(),this.showNotification("API ключ успешно сохранен и проверен!")}catch(e){console.error("API Key validation failed:",e),this.showNotification("Неверный API ключ. Проверьте его и попробуйте снова.","error")}},renderFamilyMembers(t=!1){const e=t?this.dom.wizardFamilyContainer:this.dom.settings.familyContainer;if(e.innerHTML="",this.state.settings.family.length===0&&!t){e.innerHTML='<p style="color: var(--soft-text); text-align: center;">Пока не добавлено ни одного члена семьи.</p>';return}this.state.settings.family.forEach((s,n)=>{const i=document.createElement("div");i.className="family-member-card",i.innerHTML=`
                <div>
                    <strong>${s.name}</strong>
                    <div style="font-size: 12px; color: var(--soft-text);">
                        ${s.weight}кг, ${s.height}см, Цель: ${{lose:"Снижение",maintain:"Поддержание",gain:"Набор"}[s.goal]}
                    </div>
                </div>
                <button class="edit-member-btn" data-index="${n}">✏️</button>
            `,e.appendChild(i)}),e.querySelectorAll(".edit-member-btn").forEach(s=>{s.addEventListener("click",n=>{const i=parseInt(n.currentTarget.dataset.index),a=this.state.settings.family[i];this.openFamilyMemberModal(t,a,i)})})},openFamilyMemberModal(t=!1,e=null,s=-1){const n=e?"Редактировать данные":"Добавить члена семьи",i=e?"Сохранить":"Добавить",a=`
            <div class="modal-form-group">
                <label for="modal-member-name">Имя</label>
                <input type="text" id="modal-member-name" class="modal-input" value="${(e==null?void 0:e.name)||""}" placeholder="Например, Папа">
            </div>
            <div class="modal-form-group">
                <label for="modal-member-weight">Вес (кг)</label>
                <input type="number" id="modal-member-weight" class="modal-input" value="${(e==null?void 0:e.weight)||70}" placeholder="70">
            </div>
            <div class="modal-form-group">
                <label for="modal-member-height">Рост (см)</label>
                <input type="number" id="modal-member-height" class="modal-input" value="${(e==null?void 0:e.height)||175}" placeholder="175">
            </div>
            <div class="modal-form-group">
                <label for="modal-member-goal">Цель</label>
                <select id="modal-member-goal" class="settings-select" style="height: 45px;">
                    <option value="lose" ${(e==null?void 0:e.goal)==="lose"?"selected":""}>Снижение веса</option>
                    <option value="maintain" ${!e||(e==null?void 0:e.goal)==="maintain"?"selected":""}>Поддержание веса</option>
                    <option value="gain" ${(e==null?void 0:e.goal)==="gain"?"selected":""}>Набор массы</option>
                </select>
            </div>
        `,o=[{text:"Отмена",class:"secondary",action:()=>{}},e?{text:"Удалить",class:"secondary",action:()=>{this.state.settings.family.splice(s,1),this.saveState(),this.renderFamilyMembers(t),t||this.renderFamilyMembers(!1),this.updateWizardView()}}:null,{text:i,class:"primary",action:()=>{const r={name:document.getElementById("modal-member-name").value.trim()||"Член семьи",weight:parseInt(document.getElementById("modal-member-weight").value)||70,height:parseInt(document.getElementById("modal-member-height").value)||175,goal:document.getElementById("modal-member-goal").value};s>-1?this.state.settings.family[s]=r:this.state.settings.family.push(r),this.saveState(),this.renderFamilyMembers(t),t||this.renderFamilyMembers(!1),this.updateWizardView()}}].filter(Boolean);this.showModal(n,a,o)},confirmRegenerateAll(){this.showModal("Подтверждение","<p>Вы уверены, что хотите полностью перегенерировать меню? Все текущие данные будут удалены, но ИИ постарается использовать уже купленные продукты.</p>",[{text:"Отмена",class:"secondary",action:()=>{}},{text:"Да, перегенерировать",class:"primary",action:()=>{const t=(this.state.shoppingList||[]).flatMap(e=>e.items||[]).filter(e=>(e.purchases||[]).length>0).map(e=>`${e.name} (${e.purchases.reduce((s,n)=>s+n.qty,0)} ${e.shoppingSuggestion.unit})`).join(", ");this.hideSettingsPanel(),this.startGenerationProcess(!0,t)}}])},showChangelogModal(){const e=Object.keys(this.changelog).sort((s,n)=>n.localeCompare(s,void 0,{numeric:!0})).map(s=>`
            <h4>Версия ${s}</h4>
            <ul>
                ${this.changelog[s].map(n=>`<li>${n}</li>`).join("")}
            </ul>
        `).join("");this.showModal("История изменений",e,[{text:"Закрыть",class:"primary",action:()=>{}}])},openRegenerateModal(t,e){const s=t==="meal"?"Перегенерировать блюдо":"Перегенерировать день",n=`
            <p>Вы можете указать дополнительные пожелания для этого обновления.</p>
            <div class="modal-form-group">
                <label for="regen-prompt">Пожелания (необязательно)</label>
                <textarea id="regen-prompt" class="modal-textarea" rows="2" placeholder="Например: что-то более легкое"></textarea>
            </div>
        `,i=[{text:"Отмена",class:"secondary",action:()=>{}},{text:"Перегенерировать",class:"primary",action:()=>{var o;const a=((o=document.getElementById("regen-prompt"))==null?void 0:o.value)||"";this.handleRegeneration(t,e,!1,a)}}];this.showModal(s,n,i)},async handleRegeneration(t,e,s=!1,n=""){var a;this.showNotification("Обновляем меню...","loading");const i=s?this.tempState:this.state;if(i){if(!this.ai)if(this.state.settings.apiKey)this.ai=new f({apiKey:this.state.settings.apiKey});else{this.showNotification("API ключ не настроен.","error");return}try{let o="";const r=JSON.stringify(i.menu.map(h=>({day:h.day,meals:h.meals})));if(t==="meal"){const{dayName:h,mealKey:p}=e,m=(a=i.menu.find(u=>u.day===h))==null?void 0:a.meals[p];o=`Основываясь на существующем меню: ${r}. СДЕЛАЙ ТОЛЬКО ОДНО ИЗМЕНЕНИЕ: для дня "${h}" замени блюдо "${p}" ("${m}") на что-то другое. Пожелание: ${n||"сделай что-нибудь другое"}. Сохрани все остальные блюда в меню без изменений. Затем обнови список рецептов и покупок в соответствии с этим одним изменением.`}else{const{dayName:h}=e;o=`Основываясь на существующем меню: ${r}. СДЕЛАЙ ИЗМЕНЕНИЯ ТОЛЬКО ДЛЯ ОДНОГО ДНЯ: полностью обнови меню для дня "${h}". Пожелание: ${n||"сделай этот день разнообразнее"}. Сохрани меню для всех остальных дней без изменений. Затем обнови список рецептов и покупок в соответствии с изменениями этого дня.`}const d=(this.state.shoppingList||[]).flatMap(h=>h.items||[]).filter(h=>(h.purchases||[]).length>0).map(h=>h.name).join(", "),l=await this.generateComprehensiveData(d,o);s?(this.tempState=l,this.renderPreview(),this.showNotification("Предпросмотр обновлен!")):(Object.assign(this.state,l),this.saveState(),this.renderAll(),this.showNotification("Меню успешно обновлено!"))}catch(o){this.showNotification("Ошибка при обновлении.","error"),console.error(o)}}},renderPreview(){const t=this.dom.previewMenuContainer;t.innerHTML="",!(!this.tempState||!this.tempState.menu)&&(this.tempState.menu.forEach(e=>{const s=document.createElement("div");s.className="preview-day";const n=Object.entries(e.meals).map(([i,a])=>`
                <div class="preview-meal" data-day-name="${e.day}" data-meal-key="${i}">
                    <span class="preview-meal-name">${a||"..."}</span>
                    <button class="regenerate-btn" title="Изменить это блюдо">${this.getRegenerateIcon()}</button>
                </div>
            `).join("");s.innerHTML=`<h4 class="preview-day-title">${e.day}</h4>${n}`,t.appendChild(s)}),t.querySelectorAll(".regenerate-btn").forEach(e=>{e.addEventListener("click",s=>{const n=s.target.closest(".preview-meal"),{dayName:i,mealKey:a}=n.dataset,o=this.tempState.menu.find(r=>r.day===i).meals[a];this.showModal("Изменить блюдо",`<p>Что бы вы хотели видеть вместо "${o}"?</p>
                     <textarea id="regen-prompt" class="modal-textarea" rows="2" placeholder="Например: что-то из курицы"></textarea>`,[{text:"Отмена",class:"secondary",action:()=>{}},{text:"Изменить",class:"primary",action:()=>{var d;const r=((d=document.getElementById("regen-prompt"))==null?void 0:d.value)||"";this.handleRegeneration("meal",{dayName:i,mealKey:a},!0,r)}}])})}))},acceptPreview(){this.tempState&&(Object.assign(this.state,this.tempState),this.state.timestamp=new Date().toISOString(),this.state.currentDayIndex=0,this.saveState(),this.tempState=null,this.showScreen("main-screen"),this.renderAll(),this.showNotification("Меню сохранено!"))},async exportData(){const t=`family_menu_backup_${new Date().toISOString().split("T")[0]}.json`,e=new Blob([JSON.stringify(this.state)],{type:"application/json"});try{const s=new File([e],t,{type:"application/json"});if(navigator.share&&navigator.canShare({files:[s]})){await navigator.share({files:[s],title:"Конфигурация Семейного Меню",text:'Файл с данными меню. Загрузи его в приложении "Семейное меню+".'}),this.showNotification("Данными успешно поделились!");return}}catch(s){s.name!=="AbortError"&&console.error("Share failed:",s)}try{const s=URL.createObjectURL(e),n=document.createElement("a");n.href=s,n.download=t,document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(s),this.showNotification("Файл для синхронизации скачан!")}catch(s){console.error("Fallback download failed:",s),this.showNotification("Не удалось поделиться или скачать файл.","error")}},importData(t){const e=t.target.files[0];if(!e)return;const s=new FileReader;s.onload=n=>{try{const i=JSON.parse(n.target.result);if(i.settings)this.state=i,this.saveState(),this.showNotification("Данные успешно импортированы!"),this.handleStartSetup();else throw new Error("Invalid file format")}catch{this.showNotification("Ошибка импорта: неверный формат файла.","error")}},s.readAsText(e),t.target.value=""},toggleDevConsole(){this.dom.devConsole.classList.toggle("visible")},logToConsole(t){const e=document.createElement("p");e.textContent=`[${new Date().toLocaleTimeString()}] ${t}`,this.dom.logOutput.appendChild(e),this.dom.logOutput.scrollTop=this.dom.logOutput.scrollHeight},executeCommand(t){this.logToConsole(`> ${t}`);try{switch(t.toLowerCase()){case"clear":this.dom.logOutput.innerHTML="";break;case"state":console.log(this.state),this.logToConsole("State logged to browser console.");break;case"reset":this.resetState();break;default:this.logToConsole("Unknown command. Available: clear, state, reset")}}catch(e){this.logToConsole(`Error: ${e.message}`)}this.dom.commandInput.value=""}};document.addEventListener("DOMContentLoaded",()=>N.init());
